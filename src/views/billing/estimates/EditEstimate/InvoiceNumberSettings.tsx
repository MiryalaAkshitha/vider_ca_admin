import { Box, Button, FormControlLabel, Radio, TextField } from "@mui/material";
import DialogWrapper from "components/DialogWrapper";
import { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  handleFieldChange,
  selectEstimate,
} from "redux/reducers/createEstimateSlice";

interface IProps {
  open: boolean;
  setOpen: (open: boolean) => void;
}

function InvoiceNumberSettings(props: IProps) {
  const dispatch = useDispatch();
  const { open, setOpen } = props;
  const state = useSelector(selectEstimate);
  const [number, setNumber] = useState(state.estimateNumber);
  const [prefixNumber, setPrefixNumber] = useState('');

  const handleSave = () => {
    if (state.estimateNumberType === "AUTO_GENERATED") {
      dispatch(
        handleFieldChange({
          key: "estimateNumber",
          value: state.autoGeneratedNumber,
        })
      );
    }

    if (state.estimateNumberType === "MANUAL") {
      dispatch(handleFieldChange({ key: "estimateNumber", value: `${prefixNumber}-${number}` }));
    }
    setOpen(false);
  };

  const handleNumberChange = (e, type) => {
    if(type == 'prefix') {
      setPrefixNumber(`${e.target.value}`);
    }
  }

  return (
    <DialogWrapper open={open} setOpen={setOpen} title="Invoice Number">
      <FormControlLabel
        onChange={() => {
          dispatch(
            handleFieldChange({
              key: "estimateNumberType",
              value: "AUTO_GENERATED",
            })
          );
        }}
        label="Auto generate invoice number"
        control={
          <Radio checked={state.estimateNumberType === "AUTO_GENERATED"} />
        }
      />
      {state.estimateNumberType === "AUTO_GENERATED" && (
        <Box display="flex" gap={1} mt={1}>
          <TextField
            value="INV-"
            sx={{ width: 120 }}
            size="small"
            label="Prefix"
            disabled
            InputLabelProps={{ shrink: true }}
          />
          <TextField
            disabled
            fullWidth
            sx={{ flex: 1 }}
            size="small"
            label="Number"
            value={state.autoGeneratedNumber.substring(4)}
          />
        </Box>
      )}
      <FormControlLabel
        sx={{ mt: 1 }}
        onChange={() => {
          dispatch(
            handleFieldChange({
              key: "estimateNumberType",
              value: "MANUAL",
            })
          );
        }}
        label="Add invoice number manually for this Invoice"
        control={<Radio checked={state.estimateNumberType === "MANUAL"} />}
      />
      {state.estimateNumberType === "MANUAL" && (
        <Box display="flex" gap={1} mt={1}>
          <TextField
            value={prefixNumber}
            onChange={(e) => handleNumberChange(e, 'prefix') }            
            sx={{ width: 120 }}
            size="small"
            label="Prefix"
            InputLabelProps={{ shrink: true }}
          />

          <TextField
            value={number.includes('INV-') ? number.substring(4) || "" : number}
            fullWidth
            onChange={(e) => setNumber(`${e.target.value}`) }
            sx={{ flex: 1 }}
            size="small"
            label="Number"
          />
        </Box>
      )}
      <Box textAlign="center" mt={3}>
        <Button
          onClick={handleSave}
          sx={{ minWidth: 220 }}
          color="secondary"
          variant="contained"
        >
          Save
        </Button>
      </Box>
    </DialogWrapper>
  );
}

export default InvoiceNumberSettings;
